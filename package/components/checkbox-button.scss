@use 'sass:map';

@use '../vars'    as *;
@use '../forward' as *;
@use '../mixins/utils';
@use 'button' as btn;

@include b('checkbox-button') {
  @include set-component-css-var('checkbox-button', $checkbox-button);
}

@include b('checkbox-button') {
  position: relative;
  display: inline-block;

  @include e('inner') {
    position: relative;
    display: inline-block;
    margin: 0;
    outline: none;
    line-height: 1;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    background: var(
      #{getCSSVarName('button-bg-color')},
      map.get($button, 'bg-color')
    );
    color: var(
      #{getCSSVarName('button-text-color')},
      map.get($button, 'text-color')
    );
    border: getCSSVar('border');
    border-left-color: transparent;
    font-weight: getCSSVar('checkbox-font-weight');
    -webkit-appearance: none;
    box-sizing: border-box;
    transition: getCSSVar('transition-all');
    cursor: pointer;
    user-select: none;

    @include btn.button-size(
      map.get($button-padding-vertical, 'default') - $button-border-width,
      map.get($button-padding-horizontal, 'default') - $button-border-width,
      map.get($button-font-size, 'default'),
      0
    );

    &:hover {
      color: getCSSVar('color-primary');
    }

    [class*='#{$namespace}-icon-'] {
      line-height: 0.9;

      & + span {
        margin-left: 5px;
      }
    }
  }

  @include e('original') {
    opacity: 0;
    outline: none;
    position: absolute;
    margin: 0;
    z-index: -1;
  }

  &:first-child {
    @include e('inner') {
      border-left: getCSSVar('border');
      border-top-left-radius: getCSSVar('border-radius-base');
      border-bottom-left-radius: getCSSVar('border-radius-base');
      box-shadow: none !important;
    }
  }

  &:last-child {
    @include e('inner') {

      border-top-right-radius: getCSSVar('border-radius-base');
      border-bottom-right-radius: getCSSVar('border-radius-base');
    }
  }

  @each $size in ('large', 'small') {
    @include m($size) {
      @include e('inner') {
        @include btn.button-size(
          map.get($button-padding-vertical, $size) - $button-border-width,
          map.get($button-padding-horizontal, $size) - $button-border-width,
          map.get($button-font-size, $size),
          0
        );
      }
    }
  }

  @include when('checked') {
    @include e('inner') {
      color: getCSSVar('checkbox-button-checked-text-color');
      background-color: getCSSVar('checkbox-button-checked-bg-color');
      border-color: getCSSVar('checkbox-button-checked-border-color');
      box-shadow: -1px 0 0 0 getCSSVar('color-primary-light-7');
    }

    &:first-child .#{bem('checkbox-button', 'inner')} {
      border-left-color: getCSSVar('checkbox-button-checked-border-color');
    }
  }

  @include when('disabled') {
    @include e('inner') {
      color: getCSSVar('disabled-text-color');
      cursor: not-allowed;
      background-image: none;
      background-color: var(
        #{getCSSVarName('button-disabled-bg-color')},
        map.get($button, 'disabled-bg-color')
      );
      border-color: var(
        #{getCSSVarName('button-disabled-border-color')},
        map.get($button, 'disabled-border-color')
      );
      box-shadow: none;
    }

    &:first-child .#{bem('checkbox-button', 'inner')} {
      border-left-color: var(
        #{getCSSVarName('button-disabled-border-color')},
        map.get($button, 'disabled-border-color')
      );
    }
  }

  @include when('focus') {
    @include e('inner') {
      border-color: getCSSVar('checkbox-button-checked-border-color');
    }
  }
}

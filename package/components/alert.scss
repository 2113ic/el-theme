@use '../forward' as *;
@use '../vars'    as *;

@include b('alert') {
  @include set-component-css-var('alert', $alert);
}

@include b('alert') {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  margin: 0;
  padding: getCSSVar('alert', 'padding');
  border-radius: getCSSVar('alert', 'border-radius-base');
  background-color: getCSSVar('color', 'white');
  opacity: 1;
  overflow: hidden;
  box-sizing: border-box;
  transition: opacity getCSSVar('transition-duration', 'fast');

  // element  
  @include e('icon') {
    font-size: getCSSVar('alert', 'icon-size');
    width: getCSSVar('alert', 'icon-size');
  
    @include when('big') {
      font-size: getCSSVar('alert', 'icon-large-size');
      width: getCSSVar('alert', 'icon-large-size');
    }
  }

  @include e('content') {
    display: table-cell;
    padding: 0 8px;
  }

  @include e('title') {
    font-size: getCSSVar('alert', 'title-font-size');
    line-height: 18px;
    vertical-align: text-top;

    @include when('bold') {
      font-weight: bold;
    }
  }

  @include e('description') {
    margin: 5px 0 0 0;
    font-size: getCSSVar('alert', 'description-font-size');
  }

  @include e('close-btn') {
    font-size: getCSSVar('alert', 'close-font-size');
    opacity: 1;
    position: absolute;
    top: 12px;
    right: 15px;
    cursor: pointer;

    @include when('customed') {
      font-style: normal;
      font-size: getCSSVar('alert', 'close-customed-font-size');
      top: 9px;
    }
  }

  // modifier
  @each $type in ('success', 'info', 'warning', 'error') {
    @include m($type) {
      @include css-var-from-global(
        ('alert', 'bg-color'),
        ('color', $type, 'light-9')
      );

      @include when('light') {
        background-color: getCSSVar('alert', 'bg-color');
        color: getCSSVar('color', $type);

        @include e('description') {
          color: getCSSVar('color', $type);
        }
      }

      @include when('dark') {
        background-color: getCSSVar('color', $type);
        color: getCSSVar('color', 'white');
      }
    }
  }

  // when
  @include when('center') {
    justify-content: center;
  }

  @include when('light') {
    @include e('close-btn') {
      color: getCSSVar('text-color', 'placeholder');
    }
  }

  @include when('dark') {
    @include e('close-btn') {
      color: getCSSVar('color', 'white');
    }
    @include e('description') {
      color: getCSSVar('color', 'white');
    }
  }
}

@include b('alert-fade') {
  &-entry-from, &-leave-active {
    opacity: 0;
  }
}

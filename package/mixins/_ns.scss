@use '../vars/config';
@use 'fn';

// BEM
$-B: '';

@mixin b($blocks...) {
  $-B: fn.joinSelector($blocks) !global;
  
  #{$-B} {
    @content;
  }
}

@mixin e($element) {
  $list: string.split($-B, ',');
  $len: length($list);
  $carry: '';

  @for $i from 1 through $len {
    $item: nth($list, $i);
    $carry: $carry + $item + config.$element-separator + $element;

    @if $i < $len and $item != '' {
      $carry: $carry + ',';
    }
  }

  @if fn.hitAllSpecialNestRule(&) {
    @at-root & {
      #{$carry} {
        @content;
      }
    }
  } @else {
    @at-root #{$carry} {
      @content;
    }
  }
}

@mixin m($modifier) {
  @at-root #{& + config.$modifier-separator + $modifier} {
    @content;
  }
}

@mixin when($state) {
  @at-root &.#{'is-' + $state} {
    @content;
  }
}

@mixin dark($block) {
  html.dark {
    @include b($block) {
      @content;
    }
  }
}

@function bem($block, $element: null, $modifier: null) {
  $el: if($element, config.$element-separator + $element, '');
  $mod: if($modifier, config.$modifier-separator + $modifier, '');

  @return fn.join-ns($block) + $el + $mod;
}

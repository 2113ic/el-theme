@use 'sass:map';

@use '../mixins/index' as *;
@use '../mixins/var' as *;
@use '../common/var' as *;

@include b(tour) {
  @include set-component-css-var('tour', $tour);

  @include e(hollow) {
    transition: all getCSSVar('transition-duration') ease;
  }

  @include e(content) {
    padding: 0;
    border-radius: getCSSVar('tour-border-radius');
    border: 1px solid getCSSVar('tour-border-color');
    width: var(#{getCSSVarName('tour-width')});
    background: getCSSVar('tour-bg-color');
    box-shadow: getCSSVar('box-shadow-light');
    box-sizing: border-box;

    $content-selector: &;

    $sides: (
      'top': 'bottom',
      'bottom': 'top',
      'left': 'right',
      'right': 'left',
    );

    @include e(arrow) {
      position: absolute;
      background: getCSSVar('tour-bg-color');
      border: 1px solid getCSSVar('tour-border-color');
      width: 10px;
      height: 10px;
      pointer-events: none;
      transform: rotate(45deg);
      box-sizing: border-box;

      @each $side,
        $adjacency
          in (
            'top': 'left',
            'bottom': 'right',
            'left': 'bottom',
            'right': 'top'
          )
      {
        #{$content-selector}[data-side^='#{$side}'] & {
          border-#{$side}-color: transparent;
          border-#{$adjacency}-color: transparent;
        }
      }

      @each $side, $opposite in $sides {
        #{$content-selector}[data-side^='#{$side}'] & {
          #{$opposite}: -5px;
        }
      }
    }

    @include e(closebtn) {
      position: absolute;
      top: 6px;
      right: 0;
      padding: 0;
      width: 44px;
      height: 44px;
      background: transparent;
      border: none;
      outline: none;
      cursor: pointer;
      font-size: var(
        #{getCSSVarName('message-close-size')},
        map.get($message, 'close-size')
      );

      .#{$namespace}-tour__close {
        color: getCSSVar('tour-title-text-color');
        font-size: inherit;
      }

      &:focus,
      &:hover {
        .#{$namespace}-tour__close {
          color: getCSSVar('color', 'primary');
        }
      }
    }

    @include e(header) {
      padding: getCSSVar('tour', 'padding-primary');
      padding-bottom: 10px;
      margin-right: 16px;
    }

    @include e(title) {
      line-height: getCSSVar('tour-font-line-height');
      font-size: getCSSVar('tour-title-font-size');
      color: getCSSVar('tour-title-text-color');
      font-weight: getCSSVar('tour-title-font-weight');
    }

    @include e(body) {
      padding: 0 getCSSVar('tour-padding-primary');
      color: getCSSVar('tour-text-color');
      font-size: getCSSVar('tour-font-size');
      img,
      video {
        max-width: 100%;
      }
    }

    @include e(footer) {
      padding: getCSSVar('tour-padding-primary');
      padding-top: 10px;
      box-sizing: border-box;
      display: flex;
      justify-content: space-between;
    }

    @include b(tour-indicators) {
      display: inline-block;
      flex: 1;
    }

    @include b(tour-indicator) {
      width: 6px;
      height: 6px;
      display: inline-block;
      border-radius: 50%;
      background: getCSSVar('color', 'info-light-9');
      margin-right: 6px;

      @include when(active) {
        background: getCSSVar('color', 'primary');
      }
    }
  }

  &.#{$namespace}-tour--primary {
    @include set-css-var-value('tour-title-text-color', #fff);
    @include set-css-var-value('tour-text-color', #fff);
    @include set-css-var-value('tour-bg-color', getCSSVar('color', 'primary'));

    .#{$namespace}-tour__closebtn {
      &:focus,
      &:hover {
        .#{$namespace}-tour__close {
          color: getCSSVar('tour-title-text-color');
        }
      }
    }

    .#{$namespace}-button--default {
      color: getCSSVar('color', 'primary');
      border-color: getCSSVar('color', 'primary');
      background: #fff;
    }

    .#{$namespace}-button--primary {
      border-color: #fff;
    }

    @include b(tour-indicator) {
      background: rgba(255, 255, 255, 0.15);
      @include when(active) {
        background: #fff;
      }
    }
  }
}

@include b(tour-parent) {
  @include m(hidden) {
    overflow: hidden;
  }
}

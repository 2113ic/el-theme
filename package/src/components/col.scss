@use 'sass:math';

@use '../vars'    as *;
@use '../forward' as *;

[class*=#{join-ns('col-')}] {
  box-sizing: border-box;

  @include when('guttered') {
    display: block;
    min-height: 1px;
  }
}

.#{join-ns('col' '0')} {
  display: none;
  // to avoid introducing !important syntax, redundant css rule is required due to selector priority.
  @include when('guttered') {
    display: none;
  }
}

@for $i from 0 through 24 {
  .#{join-ns('col' $i)} {
    max-width: (math.div(1, 24) * $i * 100) * 1%;
    flex: 0 0 (math.div(1, 24) * $i * 100) * 1%;
  }

  .#{join-ns('col-offset' $i)} {
    margin-left: (math.div(1, 24) * $i * 100) * 1%;
  }

  .#{join-ns('col-pull' $i)} {
    position: relative;
    right: (math.div(1, 24) * $i * 100) * 1%;
  }

  .#{join-ns('col-push' $i)} {
    position: relative;
    left: (math.div(1, 24) * $i * 100) * 1%;
  }
}

@mixin col-size($size) {
  @include res($size) {
    .#{join-ns(('col', $size, '0'))} {
      display: none;

      @include when('guttered') {
        display: none;
      }
    }

    @for $i from 0 through 24 {
      .#{join-ns(('col', $size, $i))} {
        @if $i != 0 {
          display: block;
        }
        max-width: (math.div(1, 24) * $i * 100) * 1%;
        flex: 0 0 (math.div(1, 24) * $i * 100) * 1%;
      }

      .#{join-ns(('col', $size, 'offset', $i))} {
        margin-left: (math.div(1, 24) * $i * 100) * 1%;
      }

      .#{join-ns(('col',$size, 'pull', $i))} {
        position: relative;
        right: (math.div(1, 24) * $i * 100) * 1%;
      }

      .#{join-ns(('col', $size, 'push', $i))} {
        position: relative;
        left: (math.div(1, 24) * $i * 100) * 1%;
      }
    }
  }
}

@include col-size(xs);
@include col-size(sm);
@include col-size(md);
@include col-size(lg);
@include col-size(xl);

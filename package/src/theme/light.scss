@use 'sass:map';
@use 'sass:math';

@use '../common/mixins';

// color
$colors: () !default;
$colors: map.deep-merge(
  (
    'white': #fff,
    'black': #000,
    'primary': ('base': #409eff),
    'success': ('base': #67c23a),
    'warning': ('base': #e6a23c),
    'danger' : ('base': #f56c6c),
    'error'  : ('base': #f56c6c),
    'info'   : ('base': #909399),
  ),
  $colors
);

$white: map.get($colors, 'white');
$black: map.get($colors, 'black');

@mixin set-color-mix-level(
  $type, 
  $num, 
  $mode: 'light', 
  $mix-color: $white
) {
  $mix: mix(
    $mix-color, 
    map.get($colors, $type, 'base'), 
    math.percentage(math.div($num, 10))
  );

  $colors: map.deep-merge(
    ($type: ('#{$mode}-#{$num}': $mix)), $colors
  ) !global;
}

@include mixins.each-types using ($type) {
  @for $i from 1 through 9 {
    // $colors.[type].light-[i]
    @include set-color-mix-level($type, $i, 'light');
  }

  // $colors.[type].dark-2
  @include set-color-mix-level($type, 2, 'dark', $black);
}


// background
$bg-color: () !default;
$bg-color: map.merge(
  (
    ''        : #ffffff,
    'page'    : #f2f3f5,
    'overlay' : #ffffff,
  ),
  $bg-color
);

// text
$text-color: () !default;
$text-color: map.merge(
  (
    'primary'     : #303133,
    'regular'     : #606266,
    'secondary'   : #909399,
    'placeholder' : #a8abb2,
    'disabled'    : #c0c4cc,
  ),
  $text-color
);

// fill
$fill-color: () !default;
$fill-color: map.merge(
  (
    'extra-light': #fafcff,
    'lighter'    : #fafafa,
    'light'      : #f5f7fa,
    ''           : #f0f2f5,
    'dark'       : #ebedf0,
    'darker'     : #e6e8eb,
    'blank'      : #ffffff,
  ),
  $fill-color
);

// border
$border-color: () !default;
$border-color: map.merge(
  (
    'extra-light': #f2f6fc,
    'lighter'    : #ebeef5,
    'light'      : #e4e7ed,
    ''           : #dcdfe6,
    'dark'       : #d4d7de,
    'darker'     : #cdd0d6,
  ),
  $border-color
);

// box-shadow
$box-shadow: () !default;
$box-shadow: map.merge(
  (
    '': (
      0px 12px 32px 4px rgba(0, 0, 0, 0.04),
      0px 8px 20px rgba(0, 0, 0, 0.08),
    ),
    'light'  : (0px 0px 12px rgba(0, 0, 0, 0.12)),
    'lighter': (0px 0px 6px rgba(0, 0, 0, 0.12)),
    'dark': (
      0px 16px 48px 16px rgba(0, 0, 0, 0.08),
      0px 12px 32px rgba(0, 0, 0, 0.12),
      0px 8px 16px -8px rgba(0, 0, 0, 0.16),
    ),
  ),
  $box-shadow
);

// overlay color
$overlay-color: () !default;
$overlay-color: map.merge(
  (
    ''        : rgba(0, 0, 0, 0.8),
    'light'   : rgba(0, 0, 0, 0.7),
    'lighter' : rgba(0, 0, 0, 0.5),
  ),
  $overlay-color
);

// mask color
$mask-color: () !default;
$mask-color: map.merge(
  (
    ''           : rgba(255, 255, 255, 0.9),
    'extra-light': rgba(255, 255, 255, 0.3),
  ),
  $mask-color
);

@use 'sass:map';
@use 'sass:math';

@use '../common/mixin' as mixin;
@use '../common/color' as *;
@use 'light';

// color
$colors: () !default;

@include mixin.each-types using ($type) {
  $map: ($type: ('base': map.get(light.$colors, $type, 'base')));
  $colors: map.deep-merge($map, $colors) !global;
}

@mixin set-color-mix-level(
  $type,
  $num,
  $mode: 'light',
  $mix-color: light.$white
) {
  $mix: mix(
    $mix-color,
    map.get($colors, $type, 'base'),
    math.percentage(math.div($num, 10))
  );

  $map: ($type: ('#{$mode}-#{$num}': $mix));
  $colors: map.deep-merge($map, $colors) !global;
}


// background
$bg-color: () !default;
$bg-color: map.merge(
  (
    ''        : #141414,
    'page'    : #0a0a0a,
    'overlay' : #1d1e1f,
  ),
  $bg-color
);

@include mixin.each-types using ($type) {
  @for $i from 1 through 9 {
    // $colors.[type].light-[i]
    @include set-color-mix-level($type, $i, 'light', map.get($bg-color, ''));
  }

  // $colors.[type].dark-2
  @include set-color-mix-level($type, 2, 'dark');
}

// text
$text-color-base: #f0f5ff;
$text-color: () !default;
$text-color: map.merge(
  (
    'primary'     : rgba($text-color-base, 0.95),
    'regular'     : rgba($text-color-base, 0.85),
    'secondary'   : rgba($text-color-base, 0.65),
    'placeholder' : rgba($text-color-base, 0.55),
    'disabled'    : rgba($text-color-base, 0.4),
  ),
  $text-color
);

// mix to hex to avoid overlay issues
@each $key, $val in $text-color {
  $text-color: map.merge(
    $text-color,
    ($key: mix-overlay-color($val, map.get($bg-color, '')))
  ) !global;
}

// border
$border-color-base: #f5f8ff !default;
$border-color: () !default;
$border-color: map.merge(
  (
    'extra-light' : rgba($border-color-base, 0.1),
    'lighter'     : rgba($border-color-base, 0.15),
    'light'       : rgba($border-color-base, 0.2),
    ''            : rgba($border-color-base, 0.25),
    'dark'        : rgba($border-color-base, 0.3),
    'darker'      : rgba($border-color-base, 0.35),
  ),
  $border-color
);

// mix to hex to avoid overlay issues
@each $key, $val in $border-color {
  $border-color: map.merge(
    $border-color,
    (
      $key: mix-overlay-color($val, map.get($bg-color, '')),
    )
  ) !global;
}

// fill
$fill-color-base: #fafcff;
$fill-color: () !default;
$fill-color: map.merge(
  (
    'darker'      : rgba($fill-color-base, 0.2),
    'dark'        : rgba($fill-color-base, 0.16),
    ''            : rgba($fill-color-base, 0.12),
    'light'       : rgba($fill-color-base, 0.08),
    'lighter'     : rgba($fill-color-base, 0.04),
    'extra-light' : rgba($fill-color-base, 0.02),
    'blank'       : transparent,
  ),
  $fill-color
);

// mix to hex to avoid overlay issues
@each $key, $val in $fill-color {
  @if ($key != 'blank') {
    $fill-color: map.merge(
      $fill-color,
      ($key: mix-overlay-color($val, map.get($bg-color, '')))
    ) !global;
  }
}

// box-shadow
$box-shadow: () !default;
$box-shadow: map.merge(
  (
    '': (
      0px 12px 32px 4px rgba(0, 0, 0, 0.36),
      0px 8px 20px rgba(0, 0, 0, 0.72),
    ),
    'light': (0px 0px 12px rgba(0, 0, 0, 0.72)),
    'lighter': (0px 0px 6px rgba(0, 0, 0, 0.72)),
    'dark': (
      0px 16px 48px 16px rgba(0, 0, 0, 0.72),
      0px 12px 32px #000000,
      0px 8px 16px -8px #000000,
    ),
  ),
  $box-shadow
);

// mask
$mask-color: () !default;
$mask-color: map.merge(
  (
    '': rgba(0, 0, 0, 0.8),
    'extra-light': rgba(0, 0, 0, 0.3),
  ),
  $mask-color
);

// button
$button: () !default;
$button: map.merge(
  ('disabled-text-color': rgba(255, 255, 255, 0.5)),
  $button
);

// card
// ('bg-color': fn.get('bg-color', 'overlay')),
$card: () !default;
$card: map.merge(
  ('bg-color': map.get($bg-color, 'overlay')),
  $card
);

// empty
$empty: () !default;
$empty: map.merge(
  (
    'fill-color-0': light.$black,
    'fill-color-1': #4b4b52,
    'fill-color-2': #36383d,
    'fill-color-3': #1e1e20,
    'fill-color-4': #262629,
    'fill-color-5': #202124,
    'fill-color-6': #212224,
    'fill-color-7': #1b1c1f,
    'fill-color-8': #1c1d1f,
    'fill-color-9': #18181a,
  ),
  $empty
);

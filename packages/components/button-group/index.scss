@use 'sass:map';

@use '@el-theme/common/vars' as *;
@use '@el-theme/mixins' as *;
@use '@el-theme/mixins/utils';

@include b('button-group') {
  @include utils.clearfix;
  display: inline-block;
  vertical-align: middle;

  & > .#{bem('button')} {
    float: left;
    position: relative;

    & + .#{bem('button')} {
      margin-left: 0;
    }

    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &:first-child:last-child {
      border-top-right-radius: map.get($button-border-radius, 'default');
      border-bottom-right-radius: map.get($button-border-radius, 'default');
      border-top-left-radius: map.get($button-border-radius, 'default');
      border-bottom-left-radius: map.get($button-border-radius, 'default');

      @include when('round') {
        border-radius: getCSSVar('border-radius', 'round');
      }

      @include when('circle') {
        border-radius: 50%;
      }
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    &:not(:last-child) {
      margin-right: -1px;
    }

    &:hover,
    &:focus,
    &:active {
      z-index: 1;
    }

    @include when('active') {
      z-index: 1;
    }
  }

  & > .#{bem('dropdown')} {
    & > .#{bem('button')} {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-left-color: getCSSVar('button', 'divide-border-color');
    }
  }

  @each $type in ('primary', 'success', 'warning', 'danger', 'info') {
    @include m($type) {
      &:first-child {
        border-right-color: getCSSVar('button', 'divide-border-color');
      }
      &:last-child {
        border-left-color: getCSSVar('button', 'divide-border-color');
      }
      &:not(:first-child):not(:last-child) {
        border-left-color: getCSSVar('button', 'divide-border-color');
        border-right-color: getCSSVar('button', 'divide-border-color');
      }
    }
  }
}

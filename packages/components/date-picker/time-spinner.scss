@use '@el-theme/common/vars' as *;
@use '@el-theme/mixins' as *;

@include b('time-spinner') {
  &.has-seconds .#{bem('time-spinner', 'wrapper')} {
    width: 33.3%;
  }

  @include e('wrapper') {
    position: relative;
    display: inline-block;
    width: 50%;
    max-height: 192px;
    overflow: auto;
    vertical-align: top;

    &.#{bem('scrollbar', 'wrap')} {
      &:not(.#{bem(scrollbar, wrap, hidden-default)}) {
        padding-bottom: 15px;
      }
    }

    @include when('arrow') {
      box-sizing: border-box;
      text-align: center;
      overflow: hidden;

      @include e('list') {
        transform: translateY(-32px);
      }

      @include e('item') {
        &:hover:not(.is-disabled):not(.is-active) {
          background: getCSSVar('fill-color', 'light');
          cursor: default;
        } 
      }
    }
  }

  @include e('arrow') {
    position: absolute;
    left: 0;
    z-index: getCSSVar('index-normal');
    width: 100%;
    height: 30px;
    line-height: 30px;
    text-align: center;
    font-size: 12px;
    color: getCSSVar('text-color', 'secondary');
    cursor: pointer;

    &:hover {
      color: getCSSVar('color-primary');
    }

    &.arrow-up {
      top: 10px;
    }

    &.arrow-down {
      bottom: 10px;
    }
  }

  @include e(input) {
    &.#{bem('input')} {
      width: 70%;

      .#{bem('input', 'inner')} {
        padding: 0;
        text-align: center;
      }
    }
  }

  @include e('list') {
    padding: 0;
    margin: 0;
    list-style: none;
    text-align: center;

    &::after,
    &::before {
      content: '';
      display: block;
      width: 100%;
      height: 80px;
    }
  }

  @include e('item') {
    height: 32px;
    line-height: 32px;
    font-size: 12px;
    color: getCSSVar('text-color', 'regular');

    &:hover:not(.is-disabled):not(.is-active) {
      background: getCSSVar('fill-color', 'light');
      cursor: pointer;
    }

    &.is-active:not(.is-disabled) {
      color: getCSSVar('text-color', 'primary');
      font-weight: bold;
    }

    &.is-disabled {
      color: getCSSVar('text-color', 'placeholder');
      cursor: not-allowed;
    }
  }
}
